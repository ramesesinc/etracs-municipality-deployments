import com.rameses.annotations.*;

public class RPTSyncCompletedMessageInterceptor {
	
	@DataContext('rpt_syncdata')
	def em_syncdata

	@DataContext('rpt_syncdata_completed')
	def em_syncdata_completed
	
	@DataContext('rpt_syncdata_item')
	def em_sync_item

	@DataContext('rpt_syncdata_item_completed')
	def em_sync_item_completed

	@After(pattern="RemoteMessageService.onMessage", eval="#{args[0].reftype == 'syncitem' && args[0].action == 'post-synched-items' }")
	public void postSynchedItems(evt) {
		def data = evt.args[0];
		def syncdataids = [];

		data.syncheditems.each{item ->
			def syncitem = em_sync_item.read([objid: item.objid])
			syncitem.state = 'SYNCHED';
			syncitem.error = null;

			em_sync_item_completed.create(syncitem);
			em_sync_item.find([objid: syncitem.objid]).delete();

			if (!syncdataids.contains(syncitem.parentid)) {
				syncdataids << syncitem.parentid;
			}
		}

		//close syncdata without items 
		syncdataids.each{objid -> 
			def item = em_sync_item.find([parentid: objid]).first();
			if (!item) {
				//move to syncdata to completed
				def syncdata = em_syncdata.find([objid: objid]).first();
				if (syncdata) {
					syncdata.state = 'SYNCHED';
					em_syncdata_completed.save(syncdata);
				}
				em_syncdata.find([objid: objid]).delete();
			}
		}
	}
}